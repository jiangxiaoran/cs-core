{"version":3,"sources":["node_modules/@ant-design/pro-form/es/components/Select/index.js","node_modules/@ant-design/pro-form/es/components/TextArea/index.js","node_modules/@ant-design/pro-form/es/components/Digit/index.js","node_modules/@ant-design/pro-form/es/components/TimePicker/index.js","src/pages/job/components/CreateJobModal.tsx","src/pages/job/index.tsx"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"fieldProps\", \"children\", \"params\", \"proFieldProps\", \"mode\", \"valueEnum\", \"request\", \"showSearch\", \"options\"],\n  _excluded2 = [\"fieldProps\", \"children\", \"params\", \"proFieldProps\", \"mode\", \"valueEnum\", \"request\", \"options\"];\nimport { runFunction } from '@ant-design/pro-utils';\nimport React, { useContext } from 'react';\nimport FieldContext from \"../../FieldContext\";\nimport ProFormField from \"../Field\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * 选择框\n *\n * @param\n */\nvar ProFormSelectComponents = function ProFormSelectComponents(_ref, ref) {\n  var fieldProps = _ref.fieldProps,\n    children = _ref.children,\n    params = _ref.params,\n    proFieldProps = _ref.proFieldProps,\n    mode = _ref.mode,\n    valueEnum = _ref.valueEnum,\n    request = _ref.request,\n    showSearch = _ref.showSearch,\n    options = _ref.options,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var context = useContext(FieldContext);\n  return /*#__PURE__*/_jsx(ProFormField, _objectSpread(_objectSpread({\n    valueEnum: runFunction(valueEnum),\n    request: request,\n    params: params,\n    valueType: \"select\",\n    filedConfig: {\n      customLightMode: true\n    },\n    fieldProps: _objectSpread({\n      options: options,\n      mode: mode,\n      showSearch: showSearch,\n      getPopupContainer: context.getPopupContainer\n    }, fieldProps),\n    ref: ref,\n    proFieldProps: proFieldProps\n  }, rest), {}, {\n    children: children\n  }));\n};\nvar SearchSelect = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n  var fieldProps = _ref2.fieldProps,\n    children = _ref2.children,\n    params = _ref2.params,\n    proFieldProps = _ref2.proFieldProps,\n    mode = _ref2.mode,\n    valueEnum = _ref2.valueEnum,\n    request = _ref2.request,\n    options = _ref2.options,\n    rest = _objectWithoutProperties(_ref2, _excluded2);\n  var props = _objectSpread({\n    options: options,\n    mode: mode || 'multiple',\n    labelInValue: true,\n    showSearch: true,\n    suffixIcon: null,\n    autoClearSearchValue: true,\n    optionLabelProp: 'label'\n  }, fieldProps);\n  var context = useContext(FieldContext);\n  return /*#__PURE__*/_jsx(ProFormField, _objectSpread(_objectSpread({\n    valueEnum: runFunction(valueEnum),\n    request: request,\n    params: params,\n    valueType: \"select\",\n    filedConfig: {\n      customLightMode: true\n    },\n    fieldProps: _objectSpread({\n      getPopupContainer: context.getPopupContainer\n    }, props),\n    ref: ref,\n    proFieldProps: proFieldProps\n  }, rest), {}, {\n    children: children\n  }));\n});\nvar ProFormSelect = /*#__PURE__*/React.forwardRef(ProFormSelectComponents);\nvar ProFormSearchSelect = SearchSelect;\nvar WrappedProFormSelect = ProFormSelect;\nWrappedProFormSelect.SearchSelect = ProFormSearchSelect;\n\n// @ts-ignore\n// eslint-disable-next-line no-param-reassign\nWrappedProFormSelect.displayName = 'ProFormComponent';\nexport default WrappedProFormSelect;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"fieldProps\", \"proFieldProps\"];\nimport React from 'react';\nimport ProField from \"../Field\";\n\n/**\n * 文本选择组件\n *\n * @param\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ProFormTextArea = function ProFormTextArea(_ref, ref) {\n  var fieldProps = _ref.fieldProps,\n    proFieldProps = _ref.proFieldProps,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/_jsx(ProField, _objectSpread({\n    ref: ref,\n    valueType: \"textarea\",\n    fieldProps: fieldProps,\n    proFieldProps: proFieldProps\n  }, rest));\n};\nexport default /*#__PURE__*/React.forwardRef(ProFormTextArea);","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"fieldProps\", \"min\", \"proFieldProps\", \"max\"];\nimport React from 'react';\nimport ProFormField from \"../Field\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * 数组选择组件\n *\n * @param\n */\nvar ProFormDigit = function ProFormDigit(_ref, ref) {\n  var fieldProps = _ref.fieldProps,\n    min = _ref.min,\n    proFieldProps = _ref.proFieldProps,\n    max = _ref.max,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/_jsx(ProFormField, _objectSpread({\n    valueType: \"digit\",\n    fieldProps: _objectSpread({\n      min: min,\n      max: max\n    }, fieldProps),\n    ref: ref,\n    filedConfig: {\n      defaultProps: {\n        width: '100%'\n      }\n    },\n    proFieldProps: proFieldProps\n  }, rest));\n};\nvar ForwardRefProFormDigit = /*#__PURE__*/React.forwardRef(ProFormDigit);\nexport default ForwardRefProFormDigit;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"fieldProps\", \"proFieldProps\"],\n  _excluded2 = [\"fieldProps\", \"proFieldProps\"];\nimport { dateArrayFormatter } from '@ant-design/pro-utils';\nimport React, { useContext } from 'react';\nimport FieldContext from \"../../FieldContext\";\nimport ProField from \"../Field\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar valueType = 'time';\n\n/** 时间区间选择器 */\nvar TimeRangePicker = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var fieldProps = _ref.fieldProps,\n    proFieldProps = _ref.proFieldProps,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var context = useContext(FieldContext);\n  return /*#__PURE__*/_jsx(ProField, _objectSpread({\n    ref: ref,\n    fieldProps: _objectSpread({\n      getPopupContainer: context.getPopupContainer\n    }, fieldProps),\n    valueType: \"timeRange\",\n    proFieldProps: proFieldProps,\n    filedConfig: {\n      valueType: 'timeRange',\n      customLightMode: true,\n      lightFilterLabelFormatter: function lightFilterLabelFormatter(value) {\n        return dateArrayFormatter(value, 'HH:mm:ss');\n      }\n    }\n  }, rest));\n});\n\n/**\n * 时间选择组件\n *\n * @param\n */\nvar ProFormTimePicker = function ProFormTimePicker(_ref2) {\n  var fieldProps = _ref2.fieldProps,\n    proFieldProps = _ref2.proFieldProps,\n    rest = _objectWithoutProperties(_ref2, _excluded2);\n  var context = useContext(FieldContext);\n  return /*#__PURE__*/_jsx(ProField, _objectSpread({\n    fieldProps: _objectSpread({\n      getPopupContainer: context.getPopupContainer\n    }, fieldProps),\n    valueType: valueType,\n    proFieldProps: proFieldProps,\n    filedConfig: {\n      customLightMode: true,\n      valueType: valueType\n    }\n  }, rest));\n};\nvar WrappedProFormTimePicker = ProFormTimePicker;\nWrappedProFormTimePicker.RangePicker = TimeRangePicker;\nexport default WrappedProFormTimePicker;","import {\r\n  ModalForm,\r\n  ProFormText,\r\n  ProFormSelect,\r\n  ProFormTextArea,\r\n  ProFormDigit,\r\n  ProFormTimePicker,\r\n} from '@ant-design/pro-components';\r\nimport { message } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport { addJob, getExecutorGroups } from '@/services/job/api';\r\n\r\ninterface CreateJobModalProps {\r\n  visible: boolean;\r\n  onVisibleChange: (visible: boolean) => void;\r\n  onSuccess: () => void;\r\n}\r\n\r\nconst CreateJobModal: React.FC<CreateJobModalProps> = ({\r\n  visible,\r\n  onVisibleChange,\r\n  onSuccess,\r\n}) => {\r\n  const [executorGroups, setExecutorGroups] = useState<API.ExecutorGroup[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (visible) {\r\n      loadExecutorGroups();\r\n    }\r\n  }, [visible]);\r\n\r\n  const loadExecutorGroups = async () => {\r\n    try {\r\n      const groups = await getExecutorGroups();\r\n      setExecutorGroups(groups);\r\n    } catch (error) {\r\n      console.error('加载执行器列表失败:', error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (values: any) => {\r\n    try {\r\n      // 验证作业代码格式\r\n      if (!/^[A-Z_][A-Z0-9_]*$/.test(values.jobCode)) {\r\n        message.error('作业代码只能包含大写字母、数字和下划线，且必须以字母或下划线开头');\r\n        return false;\r\n      }\r\n\r\n      // 移除JSON参数格式验证，允许任意格式\r\n      // if (values.jobParams) {\r\n      //   try {\r\n      //     JSON.parse(values.jobParams);\r\n      //   } catch (e) {\r\n      //     message.error('作业参数必须是有效的JSON格式');\r\n      //     return false;\r\n      //   }\r\n      // }\r\n\r\n      // 处理时间格式\r\n      let scheduleTime = null;\r\n      if (values.scheduleTime) {\r\n        // 如果是moment对象，转换为字符串\r\n        if (typeof values.scheduleTime === 'object' && values.scheduleTime.format) {\r\n          scheduleTime = values.scheduleTime.format('HH:mm:ss');\r\n        } else {\r\n          scheduleTime = values.scheduleTime;\r\n        }\r\n      }\r\n\r\n      const jobData = {\r\n        jobCode: values.jobCode,\r\n        jobName: values.jobName,\r\n        jobGroup: values.jobGroup || null,\r\n        jobOrder: values.jobOrder || 0,\r\n        groupOrder: values.groupOrder || 0,\r\n        procName: values.procName || null,\r\n        jobParams: values.jobParams || null,\r\n        jobType: values.jobType || null,\r\n        scheduleTimeStr: scheduleTime,\r\n        status: values.status || 'ACTIVE',\r\n        timeoutSec: values.timeoutSec || 3600,\r\n        retryCount: values.retryCount || 0,\r\n        notifyEmail: values.notifyEmail || null,\r\n        isActive: true,\r\n        isDepend: false,\r\n      };\r\n\r\n      await addJob(jobData);\r\n      message.success('新增任务成功');\r\n      onSuccess();\r\n      return true;\r\n    } catch (error) {\r\n      console.error('新增任务失败:', error);\r\n      message.error('新增任务失败: ' + (error.message || '未知错误'));\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ModalForm\r\n      title=\"新增任务\"\r\n      open={visible}\r\n      onOpenChange={onVisibleChange}\r\n      onFinish={handleSubmit}\r\n      width={800}\r\n      layout=\"horizontal\"\r\n      labelCol={{ span: 6 }}\r\n      wrapperCol={{ span: 18 }}\r\n    >\r\n      <ProFormText\r\n        name=\"jobCode\"\r\n        label=\"作业代码\"\r\n        placeholder=\"请输入作业代码，如：DATA_SYNC_001\"\r\n        rules={[\r\n          { required: true, message: '请输入作业代码' },\r\n          { \r\n            pattern: /^[A-Z_][A-Z0-9_]*$/, \r\n            message: '作业代码只能包含大写字母、数字和下划线，且必须以字母或下划线开头' \r\n          }\r\n        ]}\r\n        tooltip=\"作业代码必须唯一，建议使用大写字母和下划线\"\r\n      />\r\n\r\n      <ProFormText\r\n        name=\"jobName\"\r\n        label=\"作业名称\"\r\n        placeholder=\"请输入作业名称\"\r\n        rules={[\r\n          { required: true, message: '请输入作业名称' },\r\n          { max: 200, message: '作业名称不能超过200个字符' }\r\n        ]}\r\n      />\r\n\r\n      <ProFormText\r\n        name=\"jobGroup\"\r\n        label=\"作业分组\"\r\n        placeholder=\"请输入作业分组，如：数据处理\"\r\n        rules={[{ max: 50, message: '作业分组不能超过50个字符' }]}\r\n        tooltip=\"用于对作业进行分类管理\"\r\n      />\r\n\r\n      <ProFormDigit\r\n        name=\"jobOrder\"\r\n        label=\"作业顺序\"\r\n        placeholder=\"请输入作业顺序\"\r\n        min={0}\r\n        initialValue={0}\r\n        tooltip=\"同一分组内作业的执行顺序，数字越小优先级越高\"\r\n      />\r\n\r\n      <ProFormDigit\r\n        name=\"groupOrder\"\r\n        label=\"分组顺序\"\r\n        placeholder=\"请输入分组顺序\"\r\n        min={0}\r\n        initialValue={0}\r\n        tooltip=\"分组的显示顺序，数字越小排序越靠前\"\r\n      />\r\n\r\n      <ProFormText\r\n        name=\"procName\"\r\n        label=\"存储过程名称\"\r\n        placeholder=\"请输入存储过程名称，如：sp_sync_data\"\r\n        rules={[{ max: 200, message: '存储过程名称不能超过200个字符' }]}\r\n        tooltip=\"当作业类型为存储过程时，此字段为必填\"\r\n      />\r\n\r\n      <ProFormTextArea\r\n        name=\"jobParams\"\r\n        label=\"作业参数\"\r\n        placeholder=\"请输入作业参数，如：{'source':'mysql','target':'oracle'} 或 任意格式\"\r\n        rows={3}\r\n        tooltip=\"作业执行时传递给存储过程或脚本的参数，支持任意格式\"\r\n      />\r\n\r\n      <ProFormSelect\r\n        name=\"jobType\"\r\n        label=\"作业类型\"\r\n        placeholder=\"请选择作业类型\"\r\n        options={[\r\n          { label: '存储过程', value: 'stored_procedure' },\r\n          { label: '脚本', value: 'SCRIPT' },\r\n          { label: 'HTTP', value: 'HTTP' },\r\n        ]}\r\n        rules={[{ required: true, message: '请选择作业类型' }]}\r\n        tooltip=\"选择作业的执行方式\"\r\n      />\r\n\r\n      <ProFormTimePicker\r\n        name=\"scheduleTime\"\r\n        label=\"调度时间\"\r\n        placeholder=\"请选择调度时间\"\r\n        fieldProps={{\r\n          format: 'HH:mm:ss'\r\n        }}\r\n        tooltip=\"作业每天的执行时间，格式为HH:mm:ss\"\r\n      />\r\n\r\n      <ProFormSelect\r\n        name=\"status\"\r\n        label=\"状态\"\r\n        placeholder=\"请选择状态\"\r\n        options={[\r\n          { label: '激活', value: 'ACTIVE' },\r\n          { label: '停用', value: 'INACTIVE' },\r\n        ]}\r\n        initialValue=\"ACTIVE\"\r\n        tooltip=\"激活状态下的作业会正常调度执行\"\r\n      />\r\n\r\n      <ProFormDigit\r\n        name=\"timeoutSec\"\r\n        label=\"超时时间(秒)\"\r\n        placeholder=\"请输入超时时间\"\r\n        min={1}\r\n        max={86400}\r\n        initialValue={3600}\r\n        tooltip=\"作业执行的最大时间，超过此时间将被强制终止\"\r\n      />\r\n\r\n      <ProFormDigit\r\n        name=\"retryCount\"\r\n        label=\"重试次数\"\r\n        placeholder=\"请输入重试次数\"\r\n        min={0}\r\n        max={10}\r\n        initialValue={0}\r\n        tooltip=\"作业执行失败时的重试次数\"\r\n      />\r\n\r\n      <ProFormText\r\n        name=\"notifyEmail\"\r\n        label=\"通知邮箱\"\r\n        placeholder=\"请输入通知邮箱，多个邮箱用逗号分隔\"\r\n        tooltip=\"作业执行完成后的通知邮箱，多个邮箱用逗号分隔\"\r\n      />\r\n    </ModalForm>\r\n  );\r\n};\r\n\r\nexport default CreateJobModal; ","import type { ActionType, ProColumns } from '@ant-design/pro-components';\r\nimport {\r\n  FooterToolbar,\r\n  PageContainer,\r\n  ProTable,\r\n} from '@ant-design/pro-components';\r\nimport { Button, message, Modal, Space, Tag, Tooltip } from 'antd';\r\nimport { \r\n  PlusOutlined, \r\n  PlayCircleOutlined, \r\n  DeleteOutlined \r\n} from '@ant-design/icons';\r\nimport React, { useRef, useState } from 'react';\r\nimport { \r\n  getJobList, \r\n  deleteJob, \r\n  startJob\r\n} from '@/services/job/api';\r\nimport CreateJobModal from './components/CreateJobModal';\r\n\r\nconst JobList: React.FC = () => {\r\n  const actionRef = useRef<ActionType>(null);\r\n  const [selectedRows, setSelectedRows] = useState<API.JobDef[]>([]);\r\n  const [createModalVisible, setCreateModalVisible] = useState(false);\r\n\r\n  // 任务状态标签\r\n  const getStatusTag = (status: string) => {\r\n    switch (status) {\r\n      case 'ACTIVE':\r\n        return <Tag color=\"success\">激活</Tag>;\r\n      case 'INACTIVE':\r\n        return <Tag color=\"default\">停用</Tag>;\r\n      case 'PAUSED':\r\n        return <Tag color=\"warning\">暂停</Tag>;\r\n      case 'RUNNING':\r\n        return <Tag color=\"processing\">运行中</Tag>;\r\n      case 'STOPPED':\r\n        return <Tag color=\"error\">已停止</Tag>;\r\n      default:\r\n        return <Tag color=\"default\">{status}</Tag>;\r\n    }\r\n  };\r\n\r\n  // 任务类型标签\r\n  const getJobTypeTag = (type: string) => {\r\n    switch (type) {\r\n      case 'PROCEDURE':\r\n        return <Tag color=\"blue\">存储过程</Tag>;\r\n      case 'SCRIPT':\r\n        return <Tag color=\"green\">脚本</Tag>;\r\n      case 'HTTP':\r\n        return <Tag color=\"orange\">HTTP</Tag>;\r\n      default:\r\n        return <Tag color=\"default\">{type}</Tag>;\r\n    }\r\n  };\r\n\r\n  // 依赖状态标签\r\n  const getDependTag = (isDepend: boolean) => {\r\n    return isDepend ? <Tag color=\"red\">有依赖</Tag> : <Tag color=\"green\">无依赖</Tag>;\r\n  };\r\n\r\n  // 激活状态标签\r\n  const getActiveTag = (isActive: boolean) => {\r\n    return isActive ? <Tag color=\"success\">激活</Tag> : <Tag color=\"default\">停用</Tag>;\r\n  };\r\n\r\n  // 获取操作按钮\r\n  const getActionButtons = (record: API.JobDef) => {\r\n    const buttons = [];\r\n\r\n    // 启动按钮\r\n    if (record.status === 'INACTIVE') {\r\n      buttons.push(\r\n        <a\r\n          key=\"start\"\r\n          onClick={async () => {\r\n            try {\r\n              await startJob(record.jobId);\r\n              message.success('启动成功');\r\n              actionRef.current?.reload();\r\n            } catch (error) {\r\n              message.error('启动失败');\r\n            }\r\n          }}\r\n        >\r\n          启动\r\n        </a>\r\n      );\r\n    }\r\n\r\n    // 删除按钮\r\n    buttons.push(\r\n      <a\r\n        key=\"delete\"\r\n        onClick={() => {\r\n          Modal.confirm({\r\n            title: '确认删除',\r\n            content: `确定要删除任务 \"${record.jobName}\" 吗？`,\r\n            onOk: async () => {\r\n              try {\r\n                await deleteJob(record.jobId);\r\n                message.success('删除成功');\r\n                actionRef.current?.reload();\r\n              } catch (error) {\r\n                message.error('删除失败');\r\n              }\r\n            },\r\n          });\r\n        }}\r\n      >\r\n        删除\r\n      </a>\r\n    );\r\n\r\n    return buttons;\r\n  };\r\n\r\n  const columns: ProColumns<API.JobDef>[] = [\r\n    {\r\n      title: 'ID',\r\n      dataIndex: 'jobId',\r\n      width: 80,\r\n      search: false,\r\n    },\r\n    {\r\n      title: '作业代码',\r\n      dataIndex: 'jobCode',\r\n      width: 150,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: '作业名称',\r\n      dataIndex: 'jobName',\r\n      width: 200,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: '作业分组',\r\n      dataIndex: 'jobGroup',\r\n      width: 120,\r\n    },\r\n    {\r\n      title: '存储过程',\r\n      dataIndex: 'procName',\r\n      width: 150,\r\n      ellipsis: true,\r\n      search: false,\r\n    },\r\n    {\r\n      title: '任务类型',\r\n      dataIndex: 'jobType',\r\n      width: 120,\r\n      render: (_, record) => getJobTypeTag(record.jobType || ''),\r\n      valueType: 'select',\r\n      valueEnum: {\r\n        'PROCEDURE': { text: '存储过程', status: 'Processing' },\r\n        'SCRIPT': { text: '脚本', status: 'Default' },\r\n        'HTTP': { text: 'HTTP', status: 'Warning' },\r\n      },\r\n    },\r\n    {\r\n      title: '调度时间',\r\n      dataIndex: 'scheduleTime',\r\n      width: 100,\r\n      search: false,\r\n    },\r\n    {\r\n      title: '状态',\r\n      dataIndex: 'status',\r\n      width: 100,\r\n      render: (_, record) => getStatusTag(record.status),\r\n      valueType: 'select',\r\n      valueEnum: {\r\n        'ACTIVE': { text: '激活', status: 'Success' },\r\n        'INACTIVE': { text: '停用', status: 'Default' },\r\n        'PAUSED': { text: '暂停', status: 'Warning' },\r\n        'RUNNING': { text: '运行中', status: 'Processing' },\r\n        'STOPPED': { text: '已停止', status: 'Error' },\r\n      },\r\n    },\r\n    {\r\n      title: '依赖状态',\r\n      dataIndex: 'isDepend',\r\n      width: 100,\r\n      render: (_, record) => getDependTag(record.isDepend),\r\n      search: false,\r\n    },\r\n    {\r\n      title: '激活状态',\r\n      dataIndex: 'isActive',\r\n      width: 100,\r\n      render: (_, record) => getActiveTag(record.isActive),\r\n      search: false,\r\n    },\r\n    {\r\n      title: '超时时间(秒)',\r\n      dataIndex: 'timeoutSec',\r\n      width: 120,\r\n      search: false,\r\n    },\r\n    {\r\n      title: '重试次数',\r\n      dataIndex: 'retryCount',\r\n      width: 100,\r\n      search: false,\r\n    },\r\n    {\r\n      title: '最后运行时间',\r\n      dataIndex: 'lastRunTime',\r\n      width: 160,\r\n      search: false,\r\n      render: (text) => text || '-',\r\n    },\r\n    {\r\n      title: '下次运行时间',\r\n      dataIndex: 'nextRunTime',\r\n      width: 160,\r\n      search: false,\r\n      render: (text) => text || '-',\r\n    },\r\n    {\r\n      title: '操作',\r\n      valueType: 'option',\r\n      width: 200,\r\n      render: (_, record) => getActionButtons(record),\r\n    },\r\n  ];\r\n\r\n  const handleBatchOperation = async (operation: string) => {\r\n    if (selectedRows.length === 0) {\r\n      message.warning('请选择要操作的任务');\r\n      return;\r\n    }\r\n\r\n    const operationMap: { [key: string]: { api: Function; successMsg: string; errorMsg: string } } = {\r\n      start: { api: startJob, successMsg: '批量启动成功', errorMsg: '批量启动失败' },\r\n      delete: { api: deleteJob, successMsg: '批量删除成功', errorMsg: '批量删除失败' },\r\n    };\r\n\r\n    const { api, successMsg, errorMsg } = operationMap[operation];\r\n\r\n    try {\r\n      await Promise.all(selectedRows.map((row) => api(row.jobId)));\r\n      message.success(successMsg);\r\n      setSelectedRows([]);\r\n      actionRef.current?.reload();\r\n    } catch (error) {\r\n      message.error(errorMsg);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageContainer>\r\n      <ProTable<API.JobDef>\r\n        headerTitle=\"任务管理\"\r\n        actionRef={actionRef}\r\n        rowKey=\"jobId\"\r\n        search={{\r\n          labelWidth: 120,\r\n        }}\r\n        toolBarRender={() => [\r\n          <Button\r\n            type=\"primary\"\r\n            key=\"add\"\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setCreateModalVisible(true)}\r\n          >\r\n            新增任务\r\n          </Button>,\r\n          <Tooltip title=\"启动任务\" key=\"start\">\r\n            <Button\r\n              icon={<PlayCircleOutlined />}\r\n              onClick={() => {\r\n                if (selectedRows.length === 0) {\r\n                  message.warning('请选择要启动的任务');\r\n                  return;\r\n                }\r\n                handleBatchOperation('start');\r\n              }}\r\n            />\r\n          </Tooltip>,\r\n          <Tooltip title=\"删除任务\" key=\"delete\">\r\n            <Button\r\n              icon={<DeleteOutlined />}\r\n              danger\r\n              onClick={() => {\r\n                if (selectedRows.length === 0) {\r\n                  message.warning('请选择要删除的任务');\r\n                  return;\r\n                }\r\n                Modal.confirm({\r\n                  title: '确认删除',\r\n                  content: `确定要删除选中的 ${selectedRows.length} 个任务吗？`,\r\n                  onOk: async () => {\r\n                    try {\r\n                      await Promise.all(selectedRows.map((row) => deleteJob(row.jobId)));\r\n                      message.success('批量删除成功');\r\n                      setSelectedRows([]);\r\n                      actionRef.current?.reload();\r\n                    } catch (error) {\r\n                      message.error('批量删除失败');\r\n                    }\r\n                  },\r\n                });\r\n              }}\r\n            />\r\n          </Tooltip>,\r\n        ]}\r\n        request={async (params) => {\r\n          try {\r\n            const response = await getJobList(params);\r\n            // 处理后端ApiResponse格式\r\n            if (response && response.success) {\r\n              // 标准ApiResponse格式\r\n              if (response.data && response.data.list) {\r\n                return {\r\n                  data: response.data.list,\r\n                  total: response.data.total || 0,\r\n                  success: true,\r\n                };\r\n              }\r\n              // 直接返回数据的情况\r\n              if (response.data && Array.isArray(response.data)) {\r\n                return {\r\n                  data: response.data,\r\n                  total: response.data.length,\r\n                  success: true,\r\n                };\r\n              }\r\n            }\r\n            // 兼容其他格式\r\n            if (response && response.list) {\r\n              return {\r\n                data: response.list,\r\n                total: response.total || 0,\r\n                success: true,\r\n              };\r\n            }\r\n            if (Array.isArray(response)) {\r\n              return {\r\n                data: response,\r\n                total: response.length,\r\n                success: true,\r\n              };\r\n            }\r\n            return {\r\n              data: [],\r\n              total: 0,\r\n              success: false,\r\n            };\r\n          } catch (error) {\r\n            console.error('获取任务列表失败:', error);\r\n            return {\r\n              data: [],\r\n              total: 0,\r\n              success: false,\r\n            };\r\n          }\r\n        }}\r\n        columns={columns}\r\n        rowSelection={{\r\n          onChange: (_, selectedRows) => setSelectedRows(selectedRows),\r\n        }}\r\n        pagination={{\r\n          defaultPageSize: 10,\r\n          showSizeChanger: true,\r\n          showQuickJumper: true,\r\n        }}\r\n      />\r\n\r\n      {selectedRows.length > 0 && (\r\n        <FooterToolbar\r\n          extra={\r\n            <div>\r\n              已选择 <a style={{ fontWeight: 600 }}>{selectedRows.length}</a> 项\r\n            </div>\r\n          }\r\n        >\r\n          <Space>\r\n            <Button onClick={() => handleBatchOperation('start')}>\r\n              批量启动\r\n            </Button>\r\n            <Button onClick={() => handleBatchOperation('delete')} danger>\r\n              批量删除\r\n            </Button>\r\n          </Space>\r\n        </FooterToolbar>\r\n      )}\r\n\r\n      <CreateJobModal\r\n        visible={createModalVisible}\r\n        onVisibleChange={setCreateModalVisible}\r\n        onSuccess={() => {\r\n          setCreateModalVisible(false);\r\n          actionRef.current?.reload();\r\n        }}\r\n      />\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default JobList; "],"names":[],"mappings":"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"}